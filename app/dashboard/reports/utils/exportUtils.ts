// app/dashboard/reports/utils/exportUtils.ts - Unified content with larger fonts

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ‡∏à‡∏≤‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö Print
export const exportToPDF = async (reportData: any, reportType: string) => {
  try {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ HTML ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå
    const htmlContent = generateUnifiedContent(reportData, reportType);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á blob ‡∏à‡∏≤‡∏Å HTML
    const blob = new Blob([htmlContent], { type: 'text/html;charset=utf-8' });
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
    const url = window.URL.createObjectURL(blob);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á link element ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
    const link = document.createElement('a');
    link.href = url;
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    const today = new Date();
    const dateStr = today.toLocaleDateString('lo-LA').replace(/\//g, '-');
    const reportTypeName = getReportTypeName(reportType);
    link.download = `${reportTypeName}_${dateStr}.html`;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° link ‡πÄ‡∏Ç‡πâ‡∏≤ DOM, ‡∏Ñ‡∏•‡∏¥‡∏Å, ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏ö‡∏≠‡∏≠‡∏Å
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    
    // ‡∏•‡πâ‡∏≤‡∏á URL object
    window.URL.revokeObjectURL(url);
    
    console.log('Report file downloaded successfully');
    
  } catch (error) {
    console.error('Error exporting report:', error);
    alert('‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î‡ªÉ‡∫ô‡∫Å‡∫≤‡∫ô‡∫™‡∫ª‡ªà‡∫á‡∫≠‡∫≠‡∫Å‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô');
  }
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ticket sales ‡πÅ‡∏ï‡πà‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô
export const printReport = (reportData: any, reportType: string) => {
  try {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ HTML ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö PDF
    const htmlContent = generateUnifiedContent(reportData, reportType);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á iframe ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏¥‡∏°‡∏û‡πå (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ticket sales)
    const iframe = document.createElement('iframe');
    iframe.style.position = 'absolute';
    iframe.style.top = '-9999px';
    iframe.style.left = '-9999px';
    iframe.style.width = '1px';
    iframe.style.height = '1px';
    iframe.style.border = 'none';
    
    document.body.appendChild(iframe);
    
    // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ HTML ‡∏•‡∏á iframe
    const iframeDoc = iframe.contentDocument || iframe.contentWindow?.document;
    if (iframeDoc) {
      iframeDoc.open();
      iframeDoc.write(htmlContent);
      iframeDoc.close();
      
      // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå
      iframe.onload = () => {
        setTimeout(() => {
          try {
            // Focus iframe ‡πÅ‡∏•‡∏∞‡∏û‡∏¥‡∏°‡∏û‡πå
            iframe.contentWindow?.focus();
            iframe.contentWindow?.print();
          } catch (error) {
            console.error('Print error:', error);
            // Fallback: ‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
            const printWindow = window.open('', '_blank');
            if (printWindow) {
              printWindow.document.write(htmlContent);
              printWindow.document.close();
              printWindow.onload = () => {
                printWindow.print();
                printWindow.close();
              };
            }
          }
          
          // ‡∏•‡∏ö iframe ‡∏´‡∏•‡∏±‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå
          setTimeout(() => {
            document.body.removeChild(iframe);
          }, 2000);
        }, 500);
      };
    }
  } catch (error) {
    console.error('Error printing report:', error);
    alert('‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î‡ªÉ‡∫ô‡∫Å‡∫≤‡∫ô‡∫û‡∫¥‡∫°‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô');
  }
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á PDF ‡πÅ‡∏•‡∏∞ Print (‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô)
const generateUnifiedContent = (reportData: any, reportType: string) => {
  const formatDate = (dateStr: string) => new Date(dateStr).toLocaleDateString('lo-LA');
  const formatCurrency = (amount: number) => `‚Ç≠${amount.toLocaleString()}`;
  const getReportTitle = (type: string) => {
    const titles = {
      'summary': '‡∫™‡∫∞‡∫´‡∫º‡∫∏‡∫ö‡∫•‡∫ß‡∫°',
      'sales': '‡∫ö‡∫ª‡∫î‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô‡∫ç‡∫≠‡∫î‡∫Ç‡∫≤‡∫ç', 
      'drivers': '‡∫ö‡∫ª‡∫î‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫±‡∫ö',
      'financial': '‡∫ö‡∫ª‡∫î‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô‡∫Å‡∫≤‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô'
    };
    return titles[type as keyof typeof titles] || '‡∫ö‡∫ª‡∫î‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô';
  };

  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <title>‡∫ö‡∫ª‡∫î‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô - ${getReportTitle(reportType)}</title>
      <style>
        @import url('https://fonts.googleapis.com/css2?family=Phetsarath:wght@400;700&display=swap');
        
        * {
          font-family: "Phetsarath", serif;
          margin: 0;
          padding: 0;
          box-sizing: border-box;
        }
        
        @page {
          size: A4;
          margin: 15mm;
        }
        
        body {
          width: 210mm;
          margin: 0;
          padding: 20px;
          background: white;
          font-size: 16px; /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏à‡∏≤‡∏Å 12px ‡πÄ‡∏õ‡πá‡∏ô 16px */
          line-height: 1.6;
          color: black;
        }
        
        .report-container {
          width: 100%;
          margin: 0;
          padding: 0;
          background: white;
        }
        
        .report-header {
          text-align: center;
          margin-bottom: 30px;
          border-bottom: 3px solid #333;
          padding-bottom: 20px;
        }
        
        .report-title {
          font-size: 28px; /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏à‡∏≤‡∏Å 20px */
          font-weight: bold;
          margin-bottom: 8px;
          color: #2563EB;
        }
        
        .report-subtitle {
          font-size: 18px; /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏à‡∏≤‡∏Å 14px */
          color: #666;
          margin-bottom: 5px;
        }
        
        .system-name {
          font-size: 16px;
          color: #888;
        }
        
        .period-info {
          background: #f8f9fa;
          padding: 15px;
          margin: 20px 0;
          text-align: center;
          border-radius: 8px;
          border: 2px solid #e9ecef;
          font-size: 18px; /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î */
          font-weight: bold;
        }
        
        .content-section {
          margin: 30px 0;
        }
        
        .section-title {
          font-size: 22px; /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏à‡∏≤‡∏Å 16px */
          font-weight: bold;
          margin-bottom: 15px;
          color: #333;
          border-bottom: 2px solid #ddd;
          padding-bottom: 8px;
        }
        
        .stats-grid {
          display: grid;
          grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
          gap: 20px;
          margin: 20px 0;
        }
        
        .stat-card {
          background: #f8f9fa;
          border: 2px solid #e9ecef;
          border-radius: 10px;
          padding: 20px;
          text-align: center;
          box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .stat-label {
          font-size: 16px; /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏à‡∏≤‡∏Å 12px */
          color: #666;
          margin-bottom: 8px;
          font-weight: bold;
        }
        
        .stat-value {
          font-size: 24px; /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏à‡∏≤‡∏Å 18px */
          font-weight: bold;
          color: #2563EB;
        }
        
        table {
          width: 100%;
          border-collapse: collapse;
          margin: 20px 0;
          font-size: 16px; /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á */
        }
        
        table th, table td {
          border: 2px solid #ddd;
          padding: 12px; /* ‡πÄ‡∏û‡∏¥‡πà‡∏° padding ‡∏à‡∏≤‡∏Å 8px */
          text-align: left;
        }
        
        table th {
          background: #f1f3f4;
          font-weight: bold;
          font-size: 18px; /* ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô */
          color: #333;
        }
        
        .table-highlight {
          background: #e3f2fd !important;
          font-weight: bold;
        }
        
        .text-center { text-align: center; }
        .text-right { text-align: right; }
        .text-success { color: #28a745; }
        .text-danger { color: #dc3545; }
        .text-primary { color: #2563EB; }
        
        .report-footer {
          margin-top: 40px;
          text-align: center;
          font-size: 14px;
          color: #666;
          border-top: 2px solid #ddd;
          padding-top: 20px;
        }
        
        .currency {
          font-weight: bold;
          color: #2563EB;
        }
        
        .status-active {
          color: #28a745;
          font-weight: bold;
        }
        
        .status-inactive {
          color: #dc3545;
          font-weight: bold;
        }
        
        @media print {
          body { 
            margin: 0; 
            padding: 15mm;
          }
          .no-print { display: none; }
        }
      </style>
    </head>
    <body>
      <div class="report-container">
        <div class="report-header">
          <div class="report-title">‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡∫ö‡∫ª‡∫î‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô - ${getReportTitle(reportType)}</div>
          <div class="report-subtitle">‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡∫≠‡∫≠‡∫Å‡∫õ‡∫µ‡ªâ‡∫•‡∫ª‡∫î‡∫ï‡∫π‡ªâ‡ªÇ‡∫î‡∫ç‡∫™‡∫≤‡∫ô‡∫õ‡∫∞‡∫à‡∫≥‡∫ó‡∫≤‡∫á</div>
          <div class="system-name">‡∫•‡∫ª‡∫î‡ªÑ‡∫ü ‡∫•‡∫≤‡∫ß-‡∫à‡∫µ‡∫ô</div>
        </div>
        
        <div class="period-info">
          üìÖ <strong>‡ªÑ‡∫•‡∫ç‡∫∞‡ªÄ‡∫ß‡∫•‡∫≤:</strong> ${formatDate(reportData.period.startDate)} - ${formatDate(reportData.period.endDate)}
        </div>
        
        ${generateContentByType(reportData, reportType, formatCurrency)}
        
        <div class="report-footer">
          <p><strong>‡∫™‡ªâ‡∫≤‡∫á‡ªÄ‡∫°‡∫∑‡ªà‡∫≠:</strong> ${new Date().toLocaleString('lo-LA')}</p>
          <p>üöå ‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡∫≠‡∫≠‡∫Å‡∫õ‡∫µ‡ªâ‡∫•‡∫ª‡∫î‡∫ï‡∫π‡ªâ‡ªÇ‡∫î‡∫ç‡∫™‡∫≤‡∫ô‡∫õ‡∫∞‡∫à‡∫≥‡∫ó‡∫≤‡∫á‡∫•‡∫ª‡∫î‡ªÑ‡∫ü ‡∫•‡∫≤‡∫ß-‡∫à‡∫µ‡∫ô</p>
        </div>
      </div>
    </body>
    </html>
  `;
};

const generateContentByType = (reportData: any, reportType: string, formatCurrency: any) => {
  switch (reportType) {
    case 'summary':
      return generateSummaryContent(reportData, formatCurrency);
    case 'sales':
      return generateSalesContent(reportData, formatCurrency);
    case 'drivers':
      return generateDriversContent(reportData, formatCurrency);
    case 'financial':
      return generateFinancialContent(reportData, formatCurrency);
    default:
      return '<div class="content-section">‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô</div>';
  }
};

const generateSummaryContent = (reportData: any, formatCurrency: any) => {
  const stats = reportData.quickStats || {};
  
  return `
    <div class="content-section">
      <div class="section-title">üìä ‡∫™‡∫∞‡∫´‡∫º‡∫∏‡∫ö‡∫•‡∫ß‡∫°</div>
      
      <div class="stats-grid">
        <div class="stat-card">
          <div class="stat-label">üé´ ‡∫õ‡∫µ‡ªâ‡∫ó‡∫µ‡ªà‡∫Ç‡∫≤‡∫ç</div>
          <div class="stat-value">${stats.totalTickets || 0}</div>
          <div style="font-size: 14px; color: #888;">‡ªÉ‡∫ö</div>
        </div>
        <div class="stat-card">
          <div class="stat-label">üí∞ ‡∫•‡∫≤‡∫ç‡∫Æ‡∫±‡∫ö‡∫•‡∫ß‡∫°</div>
          <div class="stat-value currency">${formatCurrency(stats.totalRevenue || 0)}</div>
          <div style="font-size: 14px; color: #888;">‡∫Å‡∫µ‡∫ö</div>
        </div>
        <div class="stat-card">
          <div class="stat-label">üë• ‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫±‡∫ö‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫ß‡∫Ω‡∫Å</div>
          <div class="stat-value">${stats.activeDrivers || 0}</div>
          <div style="font-size: 14px; color: #888;">‡∫Ñ‡∫ª‡∫ô</div>
        </div>
        <div class="stat-card">
          <div class="stat-label">üìà ‡∫•‡∫≤‡∫Ñ‡∫≤‡ªÄ‡∫ä‡∫•‡∫µ‡ªà‡∫ç</div>
          <div class="stat-value currency">${formatCurrency(stats.avgTicketPrice || 0)}</div>
          <div style="font-size: 14px; color: #888;">‡∫Å‡∫µ‡∫ö/‡ªÉ‡∫ö</div>
        </div>
      </div>
      
      <table>
        <tr class="table-highlight">
          <th style="width: 30%;">‡∫õ‡∫∞‡ªÄ‡∫û‡∫î</th>
          <th>‡∫•‡∫≤‡∫ç‡∫•‡∫∞‡∫≠‡∫Ω‡∫î</th>
        </tr>
        <tr>
          <td><strong>üéØ ‡∫ç‡∫≠‡∫î‡∫Ç‡∫≤‡∫ç</strong></td>
          <td>${reportData.sales?.totalTickets || 0} ‡ªÉ‡∫ö (<span class="currency">${formatCurrency(reportData.sales?.totalRevenue || 0)}</span>)</td>
        </tr>
        <tr>
          <td><strong>üöó ‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫±‡∫ö</strong></td>
          <td>${reportData.drivers?.totalDrivers || 0} ‡∫Ñ‡∫ª‡∫ô‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î, <span class="text-success">${reportData.drivers?.activeDrivers || 0} ‡∫Ñ‡∫ª‡∫ô‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫ß‡∫Ω‡∫Å</span></td>
        </tr>
        <tr>
          <td><strong>üíº ‡∫Å‡∫≤‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô</strong></td>
          <td>
            ‡∫ö‡ªç‡∫•‡∫¥‡∫™‡∫±‡∫î <span class="currency">${formatCurrency(reportData.financial?.companyShare || 0)}</span> | 
            ‡∫™‡∫∞‡∫ñ‡∫≤‡∫ô‡∫µ <span class="currency">${formatCurrency(reportData.financial?.stationShare || 0)}</span> | 
            ‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫±‡∫ö <span class="currency">${formatCurrency(reportData.financial?.driverShare || 0)}</span>
          </td>
        </tr>
      </table>
    </div>
  `;
};

const generateSalesContent = (reportData: any, formatCurrency: any) => {
  const summary = reportData.summary || {};
  let paymentTable = '';
  
  if (reportData.paymentMethods && reportData.paymentMethods.length > 0) {
    const paymentRows = reportData.paymentMethods.map((pm: any) => `
      <tr>
        <td><strong>${pm._id === 'cash' ? 'üíµ ‡ªÄ‡∫á‡∫¥‡∫ô‡∫™‡∫ª‡∫î' : 'üì± ‡ªÄ‡∫á‡∫¥‡∫ô‡ªÇ‡∫≠‡∫ô'}</strong></td>
        <td class="text-center">${pm.count}</td>
        <td class="text-right currency">${formatCurrency(pm.revenue)}</td>
        <td class="text-center">${Math.round((pm.count / summary.totalTickets) * 100)}%</td>
      </tr>
    `).join('');
    
    paymentTable = `
      <table>
        <tr class="table-highlight">
          <th>‡∫ß‡∫¥‡∫ó‡∫µ‡∫ä‡∫≥‡∫•‡∫∞</th>
          <th class="text-center">‡∫à‡∫≥‡∫ô‡∫ß‡∫ô</th>
          <th class="text-center">‡∫•‡∫≤‡∫ç‡∫Æ‡∫±‡∫ö</th>
          <th class="text-center">‡∫™‡∫±‡∫î‡∫™‡ªà‡∫ß‡∫ô</th>
        </tr>
        ${paymentRows}
        <tr style="background: #f8f9fa; font-weight: bold;">
          <td><strong>üìä ‡∫•‡∫ß‡∫°‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î</strong></td>
          <td class="text-center">${summary.totalTickets}</td>
          <td class="text-right currency">${formatCurrency(summary.totalRevenue)}</td>
          <td class="text-center">100%</td>
        </tr>
      </table>
    `;
  }
  
  return `
    <div class="content-section">
      <div class="section-title">üéØ ‡∫ö‡∫ª‡∫î‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô‡∫ç‡∫≠‡∫î‡∫Ç‡∫≤‡∫ç</div>
      
      <div class="stats-grid">
        <div class="stat-card">
          <div class="stat-label">üé´ ‡∫õ‡∫µ‡ªâ‡∫ó‡∫µ‡ªà‡∫Ç‡∫≤‡∫ç</div>
          <div class="stat-value">${summary.totalTickets || 0}</div>
        </div>
        <div class="stat-card">
          <div class="stat-label">üí∞ ‡∫•‡∫≤‡∫ç‡∫Æ‡∫±‡∫ö‡∫•‡∫ß‡∫°</div>
          <div class="stat-value currency">${formatCurrency(summary.totalRevenue || 0)}</div>
        </div>
        <div class="stat-card">
          <div class="stat-label">üìà ‡∫•‡∫≤‡∫Ñ‡∫≤‡ªÄ‡∫ä‡∫•‡∫µ‡ªà‡∫ç</div>
          <div class="stat-value currency">${formatCurrency(summary.averagePrice || 0)}</div>
        </div>
      </div>
      
      ${paymentTable || '<p style="text-align: center; color: #666; font-size: 18px;">‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫Å‡∫≤‡∫ô‡∫ä‡∫≥‡∫•‡∫∞‡ªÄ‡∫á‡∫¥‡∫ô</p>'}
    </div>
  `;
};

const generateDriversContent = (reportData: any, formatCurrency: any) => {
  const summary = reportData.summary || {};
  let driversTable = '';
  
  if (reportData.drivers && reportData.drivers.length > 0) {
    const activeDrivers = reportData.drivers.filter((d: any) => d.totalIncome > 0).slice(0, 15);
    
    if (activeDrivers.length > 0) {
      const driverRows = activeDrivers.map((driver: any, index: number) => `
        <tr>
          <td class="text-center">${index + 1}</td>
          <td><strong>${driver.name || '‡∫ö‡ªç‡ªà‡∫•‡∫∞‡∫ö‡∫∏'}</strong></td>
          <td class="text-center">${driver.employeeId || '-'}</td>
          <td class="text-center">${driver.workDays || 0}</td>
          <td class="text-right currency">${formatCurrency(driver.totalIncome || 0)}</td>
          <td class="text-center">
            <span class="${driver.performance === 'Active' ? 'status-active' : 'status-inactive'}">
              ${driver.performance === 'Active' ? '‚úÖ ‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫ß‡∫Ω‡∫Å' : '‚ùå ‡∫ö‡ªç‡ªà‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫ß‡∫Ω‡∫Å'}
            </span>
          </td>
        </tr>
      `).join('');
      
      driversTable = `
        <table>
          <tr class="table-highlight">
            <th class="text-center">#</th>
            <th>‡∫ä‡∫∑‡ªà</th>
            <th class="text-center">‡∫•‡∫∞‡∫´‡∫±‡∫î</th>
            <th class="text-center">‡∫ß‡∫±‡∫ô‡∫ó‡∫≥‡∫á‡∫≤‡∫ô</th>
            <th class="text-center">‡∫•‡∫≤‡∫ç‡∫Æ‡∫±‡∫ö</th>
            <th class="text-center">‡∫™‡∫∞‡∫ñ‡∫≤‡∫ô‡∫∞</th>
          </tr>
          ${driverRows}
        </table>
      `;
    }
  }
  
  return `
    <div class="content-section">
      <div class="section-title">üë• ‡∫ö‡∫ª‡∫î‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫±‡∫ö</div>
      
      <div class="stats-grid">
        <div class="stat-card">
          <div class="stat-label">üë• ‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫±‡∫ö‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î</div>
          <div class="stat-value">${summary.totalDrivers || 0}</div>
        </div>
        <div class="stat-card">
          <div class="stat-label">üèÉ ‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫±‡∫ö‡∫ó‡∫µ‡ªà‡∫ó‡∫≥‡∫á‡∫≤‡∫ô</div>
          <div class="stat-value">${summary.workingDriversInPeriod || 0}</div>
        </div>
        <div class="stat-card">
          <div class="stat-label">üí∞ ‡∫•‡∫≤‡∫ç‡∫Æ‡∫±‡∫ö‡∫ï‡ªç‡ªà‡∫Ñ‡∫ª‡∫ô</div>
          <div class="stat-value currency">${formatCurrency(summary.revenuePerDriver || 0)}</div>
        </div>
        <div class="stat-card">
          <div class="stat-label">üíµ ‡∫•‡∫≤‡∫ç‡∫Æ‡∫±‡∫ö‡∫•‡∫ß‡∫°</div>
          <div class="stat-value currency">${formatCurrency(summary.totalIncome || 0)}</div>
        </div>
      </div>
      
      ${driversTable || '<p style="text-align: center; color: #666; font-size: 18px;">‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫±‡∫ö‡∫ó‡∫µ‡ªà‡∫°‡∫µ‡∫•‡∫≤‡∫ç‡∫Æ‡∫±‡∫ö‡ªÉ‡∫ô‡∫ä‡ªà‡∫ß‡∫á‡∫ô‡∫µ‡ªâ</p>'}
    </div>
  `;
};

const generateFinancialContent = (reportData: any, formatCurrency: any) => {
  const breakdown = reportData.breakdown || {};
  
  return `
    <div class="content-section">
      <div class="section-title">üíº ‡∫ö‡∫ª‡∫î‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô‡∫Å‡∫≤‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô</div>
      
      <div class="stats-grid">
        <div class="stat-card">
          <div class="stat-label">üí∞ ‡∫•‡∫≤‡∫ç‡∫Æ‡∫±‡∫ö‡∫•‡∫ß‡∫°</div>
          <div class="stat-value currency">${formatCurrency(reportData.summary?.totalRevenue || 0)}</div>
        </div>
      </div>
      
      <table>
        <tr class="table-highlight">
          <th style="width: 20%;">‡∫õ‡∫∞‡ªÄ‡∫û‡∫î</th>
          <th class="text-center" style="width: 30%;">‡∫°‡∫π‡∫ô‡∫Ñ‡ªà‡∫≤</th>
          <th class="text-center" style="width: 20%;">‡ªÄ‡∫õ‡∫µ‡ªÄ‡∫ä‡∫±‡∫ô</th>
          <th class="text-center">‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</th>
        </tr>
        <tr>
          <td><strong>üè¢ ‡∫ö‡ªç‡∫•‡∫¥‡∫™‡∫±‡∫î</strong></td>
          <td class="text-right currency">${formatCurrency(breakdown.company?.totalAmount || 0)}</td>
          <td class="text-center text-primary"><strong>10%</strong></td>
          <td class="text-center">${breakdown.company?.transactionCount || 0} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</td>
        </tr>
        <tr>
          <td><strong>üöâ ‡∫™‡∫∞‡∫ñ‡∫≤‡∫ô‡∫µ</strong></td>
          <td class="text-right currency">${formatCurrency(breakdown.station?.totalAmount || 0)}</td>
          <td class="text-center text-success"><strong>5%</strong></td>
          <td class="text-center">${breakdown.station?.transactionCount || 0} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</td>
        </tr>
        <tr>
          <td><strong>üë• ‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫±‡∫ö</strong></td>
          <td class="text-right currency">${formatCurrency(breakdown.driver?.totalAmount || 0)}</td>
          <td class="text-center text-primary"><strong>85%</strong></td>
          <td class="text-center">${breakdown.driver?.transactionCount || 0} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</td>
        </tr>
        <tr style="background: #f8f9fa; font-weight: bold; font-size: 18px;">
          <td><strong>üìä ‡∫•‡∫ß‡∫°‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î</strong></td>
          <td class="text-right currency">${formatCurrency(reportData.summary?.totalRevenue || 0)}</td>
          <td class="text-center"><strong>100%</strong></td>
          <td class="text-center">-</td>
        </tr>
      </table>
      
      <div style="margin-top: 20px; padding: 15px; background: #e3f2fd; border-radius: 8px; border-left: 4px solid #2196f3;">
        <p style="font-size: 16px; margin-bottom: 10px;"><strong>üìã ‡ªù‡∫≤‡∫ç‡ªÄ‡∫´‡∫î‡∫Å‡∫≤‡∫ô‡ªÅ‡∫ö‡ªà‡∫á‡∫•‡∫≤‡∫ç‡∫Æ‡∫±‡∫ö:</strong></p>
        <ul style="margin-left: 20px; font-size: 14px;">
          <li>‡∫ö‡ªç‡∫•‡∫¥‡∫™‡∫±‡∫î‡ªÑ‡∫î‡ªâ‡∫Æ‡∫±‡∫ö <strong>10%</strong> ‡∫à‡∫≤‡∫Å‡∫•‡∫≤‡∫ç‡∫Æ‡∫±‡∫ö‡∫•‡∫ß‡∫°</li>
          <li>‡∫™‡∫∞‡∫ñ‡∫≤‡∫ô‡∫µ‡ªÑ‡∫î‡ªâ‡∫Æ‡∫±‡∫ö <strong>5%</strong> ‡∫à‡∫≤‡∫Å‡∫•‡∫≤‡∫ç‡∫Æ‡∫±‡∫ö‡∫•‡∫ß‡∫°</li>
          <li>‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫±‡∫ö‡ªÑ‡∫î‡ªâ‡∫Æ‡∫±‡∫ö <strong>85%</strong> ‡ªÅ‡∫ö‡ªà‡∫á‡∫Å‡∫±‡∫ô‡∫ï‡∫≤‡∫°‡∫à‡∫≥‡∫ô‡∫ß‡∫ô‡∫Ñ‡∫ª‡∫ô‡∫ó‡∫µ‡ªà‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫ß‡∫Ω‡∫Å</li>
        </ul>
      </div>
    </div>
  `;
};

// Helper function to get report type name in Lao
const getReportTypeName = (type: string) => {
  const titles = {
    'summary': '‡∫™‡∫∞‡∫´‡∫º‡∫∏‡∫ö‡∫•‡∫ß‡∫°',
    'sales': '‡∫ö‡∫ª‡∫î‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô‡∫ç‡∫≠‡∫î‡∫Ç‡∫≤‡∫ç',
    'drivers': '‡∫ö‡∫ª‡∫î‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô‡∫Ñ‡∫ª‡∫ô‡∫Ç‡∫±‡∫ö',
    'financial': '‡∫ö‡∫ª‡∫î‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô‡∫Å‡∫≤‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô'
  };
  return titles[type as keyof typeof titles] || '‡∫ö‡∫ª‡∫î‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô';
};