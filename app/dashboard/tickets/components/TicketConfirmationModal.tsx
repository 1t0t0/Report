// app/dashboard/tickets/components/TicketConfirmationModal.tsx - Enhanced with keyboard input
import React, { useState, useEffect, useRef } from 'react';
import { FiX, FiPrinter, FiAlertCircle } from 'react-icons/fi';

interface TicketConfirmationModalProps {
  isOpen: boolean;
  ticketPrice: number;
  paymentMethod: 'cash' | 'qr';
  quantity: number;
  onQuantityChange: (quantity: number) => void;
  onConfirm: () => void;
  onCancel: () => void;
  loading: boolean;
}

const TicketConfirmationModal: React.FC<TicketConfirmationModalProps> = ({
  isOpen, ticketPrice, paymentMethod, quantity, onQuantityChange, onConfirm, onCancel, loading
}) => {
  const [inputValue, setInputValue] = useState(quantity.toString());
  const [error, setError] = useState('');
  const inputRef = useRef<HTMLInputElement>(null);
  
  // ‡∏Ç‡∏µ‡∏î‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î - ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 50 ‡πÉ‡∏ö‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡πâ‡∏á
  const MAX_QUANTITY = 50;
  const MIN_QUANTITY = 1;

  // Sync ‡∏Å‡∏±‡∏ö quantity prop
  useEffect(() => {
    if (isOpen) {
      setInputValue(quantity.toString());
      setError('');
      // Focus input ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î modal
      setTimeout(() => {
        inputRef.current?.focus();
        inputRef.current?.select();
      }, 100);
    }
  }, [isOpen, quantity]);

  // Handle keyboard shortcuts
  useEffect(() => {
    if (!isOpen) return;

    const handleKeyDown = (e: KeyboardEvent) => {
      // Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
      if (e.key === 'Enter' && !loading && !error && inputValue) {
        e.preventDefault();
        onConfirm();
      }
      // Escape ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
      else if (e.key === 'Escape' && !loading) {
        e.preventDefault();
        onCancel();
      }
    };

    document.addEventListener('keydown', handleKeyDown);
    return () => document.removeEventListener('keydown', handleKeyDown);
  }, [isOpen, loading, error, inputValue, onConfirm, onCancel]);

  if (!isOpen) return null;

  const getPaymentText = (method: string) => method === 'cash' ? '‡ªÄ‡∫á‡∫¥‡∫ô‡∫™‡∫ª‡∫î' : '‡ªÄ‡∫á‡∫¥‡∫ô‡ªÇ‡∫≠‡∫ô';
  
  // Validate ‡πÅ‡∏•‡∏∞ update quantity
  const handleInputChange = (value: string) => {
    setInputValue(value);
    
    // ‡∏•‡∏ö error ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏°‡πà
    if (error) setError('');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    if (value === '') {
      return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
    const numericValue = parseInt(value, 10);
    
    if (isNaN(numericValue)) {
      setError('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÉ‡∫™‡ªà‡∫ï‡∫ª‡∫ß‡ªÄ‡∫•‡∫Å‡ªÄ‡∫ó‡∫ª‡ªà‡∫≤‡∫ô‡∫±‡ªâ‡∫ô');
      return;
    }
    
    if (numericValue < MIN_QUANTITY) {
      setError(`‡∫à‡∫≥‡∫ô‡∫ß‡∫ô‡∫ï‡ªç‡ªà‡∫≤‡∫™‡∫∏‡∫î ${MIN_QUANTITY} ‡ªÉ‡∫ö`);
      return;
    }
    
    if (numericValue > MAX_QUANTITY) {
      setError(`‡∫à‡∫≥‡∫ô‡∫ß‡∫ô‡∫™‡∫π‡∫á‡∫™‡∫∏‡∫î ${MAX_QUANTITY} ‡ªÉ‡∫ö‡∫ï‡ªç‡ªà‡∫Å‡∫≤‡∫ô‡∫û‡∫¥‡∫°‡∫û‡ªå 1 ‡∫Ñ‡∫±‡ªâ‡∫á`);
      return;
    }
    
    // ‡∏ñ‡πâ‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    setError('');
    onQuantityChange(numericValue);
  };

  const totalAmount = ticketPrice * quantity;
  const hasValidQuantity = !error && inputValue && quantity >= MIN_QUANTITY && quantity <= MAX_QUANTITY;

  // ‡∏õ‡∏∏‡πà‡∏° +/- ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
  const changeQuantity = (change: number) => {
    const newQuantity = quantity + change;
    if (newQuantity >= MIN_QUANTITY && newQuantity <= MAX_QUANTITY) {
      const newValue = newQuantity.toString();
      setInputValue(newValue);
      handleInputChange(newValue);
    }
  };

  // Handle input focus/blur
  const handleInputFocus = () => {
    inputRef.current?.select();
  };

  const handleInputBlur = () => {
    // ‡∏ñ‡πâ‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á ‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô 1
    if (!inputValue || inputValue === '0') {
      setInputValue('1');
      handleInputChange('1');
    }
  };

  return (
    <div className="fixed inset-0 bg-white/80 backdrop-blur flex items-center justify-center z-50">
      <div className="bg-white rounded-xl shadow-2xl max-w-md w-full mx-4 border">
        <div className="bg-blue-500 text-white p-4 flex items-center justify-between">
          <div className="flex items-center">
            <FiPrinter className="mr-2" />
            <h3 className="text-lg font-bold">‡∫¢‡∫∑‡∫ô‡∫¢‡∫±‡∫ô‡∫≠‡∫≠‡∫Å‡∫õ‡∫µ‡ªâ</h3>
          </div>
          <button 
            onClick={onCancel} 
            className="p-1 hover:bg-blue-600 rounded transition-colors" 
            disabled={loading}
            title="‡∫õ‡∫¥‡∫î (ESC)"
          >
            <FiX />
          </button>
        </div>
        
        <div className="p-6">
          {/* ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤ */}
          <div className="mb-6">
            <div className="text-sm text-gray-500 mb-1">‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ï‡ªç‡ªà‡ªÉ‡∫ö</div>
            <div className="bg-gray-50 rounded-lg p-4 border-2">
              <div className="text-xl font-bold text-gray-800 mb-1">‚Ç≠{ticketPrice.toLocaleString()}</div>
              <div className="text-sm text-gray-500 mb-3">{quantity} ‡ªÉ‡∫ö x ‚Ç≠{ticketPrice.toLocaleString()}</div>
              <div className="border-t pt-3">
                <div className="flex justify-between items-center">
                  <span className="text-lg font-semibold">‡∫•‡∫≤‡∫Ñ‡∫≤‡∫•‡∫ß‡∫°‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î:</span>
                  <span className="text-3xl font-bold text-blue-600">‚Ç≠{totalAmount.toLocaleString()}</span>
                </div>
              </div>
            </div>
          </div>

          {/* ‡∏™‡πà‡∏ß‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÉ‡∏ö - Enhanced */}
          <div className="mb-6">
            <div className="flex items-center justify-between mb-3">
              <label className="text-sm font-semibold">‡∫à‡∫≥‡∫ô‡∫ß‡∫ô‡ªÉ‡∫ö</label>
              <div className="text-xs text-gray-500">
                ‡∫™‡∫π‡∫á‡∫™‡∫∏‡∫î {MAX_QUANTITY} ‡ªÉ‡∫ö/‡∫Ñ‡∫±‡ªâ‡∫á
              </div>
            </div>
            
            <div className="flex items-center justify-center space-x-4">
              {/* ‡∏õ‡∏∏‡πà‡∏° - */}
              <button
                onClick={() => changeQuantity(-1)}
                disabled={quantity <= MIN_QUANTITY || loading}
                className={`w-12 h-12 rounded-lg border-2 flex items-center justify-center font-bold text-lg transition ${
                  quantity <= MIN_QUANTITY || loading 
                    ? 'border-gray-300 text-gray-300 cursor-not-allowed bg-gray-100' 
                    : 'border-gray-300 text-gray-600 hover:border-blue-500 hover:text-blue-500 hover:bg-blue-50'
                }`}
                title="‡∫•‡∫ª‡∫î 1 ‡ªÉ‡∫ö"
              >
                ‚àí
              </button>
              
              {/* Input field */}
              <div className="flex flex-col items-center">
                <input
                  ref={inputRef}
                  type="text"
                  inputMode="numeric"
                  pattern="[0-9]*"
                  value={inputValue}
                  onChange={(e) => handleInputChange(e.target.value)}
                  onFocus={handleInputFocus}
                  onBlur={handleInputBlur}
                  disabled={loading}
                  className={`w-20 h-12 text-2xl font-bold text-center border-2 rounded-lg transition focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                    error 
                      ? 'border-red-500 bg-red-50 text-red-700' 
                      : 'border-gray-300 bg-white hover:border-blue-300 focus:border-blue-500'
                  } ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}
                  placeholder="1"
                  title="‡∫û‡∫¥‡∫°‡∫û‡ªå‡∫ï‡∫ª‡∫ß‡ªÄ‡∫•‡∫Å‡∫à‡∫≥‡∫ô‡∫ß‡∫ô‡ªÉ‡∫ö (Enter ‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡∫¢‡∫∑‡∫ô‡∫¢‡∫±‡∫ô)"
                />
                
                {/* ‡πÅ‡∏™‡∏î‡∏á error */}
                {error && (
                  <div className="flex items-center mt-1 text-xs text-red-600">
                    <FiAlertCircle className="w-3 h-3 mr-1" />
                    <span>{error}</span>
                  </div>
                )}
              </div>
              
              {/* ‡∏õ‡∏∏‡πà‡∏° + */}
              <button
                onClick={() => changeQuantity(1)}
                disabled={quantity >= MAX_QUANTITY || loading}
                className={`w-12 h-12 rounded-lg border-2 flex items-center justify-center font-bold text-lg transition ${
                  quantity >= MAX_QUANTITY || loading 
                    ? 'border-gray-300 text-gray-300 cursor-not-allowed bg-gray-100' 
                    : 'border-gray-300 text-gray-600 hover:border-blue-500 hover:text-blue-500 hover:bg-blue-50'
                }`}
                title="‡ªÄ‡∫û‡∫µ‡ªà‡∫° 1 ‡ªÉ‡∫ö"
              >
                +
              </button>
            </div>
            
            {/* ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô */}
            <div className="mt-2 text-center">
              <p className="text-xs text-gray-500">
                üí° ‡∫™‡∫≤‡∫°‡∫≤‡∫î‡∫û‡∫¥‡∫°‡∫û‡ªå‡∫ï‡∫ª‡∫ß‡ªÄ‡∫•‡∫Å‡ªÇ‡∫î‡∫ç‡∫Å‡∫ª‡∫á ‡∫´‡∫º‡∫∑ ‡ªÉ‡∫ä‡ªâ‡∫õ‡∫∏‡ªà‡∫° +/- ‚Ä¢ Enter ‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡∫¢‡∫∑‡∫ô‡∫¢‡∫±‡∫ô
              </p>
            </div>
          </div>

          {/* ‡∏™‡πà‡∏ß‡∏ô‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
          <div className="mb-6">
            <div className="text-sm font-semibold mb-2">‡∫ß‡∫¥‡∫ó‡∫µ‡∫Å‡∫≤‡∫ô‡∫ä‡∫≥‡∫•‡∫∞</div>
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-3">
              <div className="flex items-center">
                <div className={`w-3 h-3 rounded-full mr-2 ${paymentMethod === 'cash' ? 'bg-blue-500' : 'bg-green-500'}`}></div>
                <span className="font-medium">{getPaymentText(paymentMethod)}</span>
              </div>
            </div>
          </div>

          {/* ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏≤‡∏Å */}
          {quantity > 20 && (
            <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6">
              <div className="flex items-start">
                <FiAlertCircle className="text-yellow-600 mr-2 mt-0.5 flex-shrink-0" />
                <div className="text-yellow-700 text-sm">
                  <strong>‡ªù‡∫≤‡∫ç‡ªÄ‡∫´‡∫î:</strong> ‡∫ó‡ªà‡∫≤‡∫ô‡∫Å‡∫≥‡∫•‡∫±‡∫á‡∫û‡∫¥‡∫°‡∫û‡ªå‡∫õ‡∫µ‡ªâ‡∫à‡∫≥‡∫ô‡∫ß‡∫ô‡∫´‡∫•‡∫≤‡∫ç ({quantity} ‡ªÉ‡∫ö) 
                  ‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡∫Å‡∫ß‡∫î‡∫™‡∫≠‡∫ö‡∫Ñ‡∫ß‡∫≤‡∫°‡∫ñ‡∫∑‡∫Å‡∫ï‡ªâ‡∫≠‡∫á
                </div>
              </div>
            </div>
          )}

          <div className="bg-blue-50 border-l-4 border-blue-400 p-4 mb-6">
            <div className="flex items-start">
              <div className="text-blue-600 mr-2 font-bold">‡ªù‡∫≤‡∫ç‡ªÄ‡∫´‡∫î:</div>
              <div className="text-blue-700 text-sm">‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡∫Å‡∫ß‡∫î‡∫™‡∫≠‡∫ö‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫Å‡ªà‡∫≠‡∫ô‡∫¢‡∫∑‡∫ô‡∫¢‡∫±‡∫ô</div>
            </div>
          </div>
          
          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å */}
          <div className="flex space-x-3">
            <button
              className="flex-1 py-3 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg font-medium transition border"
              onClick={onCancel}
              disabled={loading}
              title="‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å (ESC)"
            >
              ‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å
            </button>
            
            <button
              className={`flex-1 py-3 bg-blue-500 hover:bg-blue-600 text-white rounded-lg font-medium transition flex items-center justify-center ${
                loading || !hasValidQuantity ? 'opacity-70 cursor-not-allowed' : ''
              }`}
              onClick={onConfirm}
              disabled={loading || !hasValidQuantity}
              title={hasValidQuantity ? "‡∫¢‡∫∑‡∫ô‡∫¢‡∫±‡∫ô (Enter)" : "‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫Å‡ªà‡∫≠‡∫ô"}
            >
              {loading ? (
                <div className="flex items-center">
                  <div className="animate-spin -ml-1 mr-2 h-4 w-4 border-2 border-white border-t-transparent rounded-full"></div>
                  ‡∫Å‡∫≥‡∫•‡∫±‡∫á‡∫î‡∫≥‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô...
                </div>
              ) : '‡∫¢‡∫∑‡∫ô‡∫¢‡∫±‡∫ô'}
            </button>
          </div>
          
          {/* ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ keyboard shortcuts */}
          <div className="mt-4 pt-3 border-t border-gray-200">
            <div className="text-xs text-gray-500 text-center space-y-1">
              <div>‚å®Ô∏è <kbd className="px-1 py-0.5 bg-gray-100 rounded text-xs">Enter</kbd> ‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡∫¢‡∫∑‡∫ô‡∫¢‡∫±‡∫ô ‚Ä¢ <kbd className="px-1 py-0.5 bg-gray-100 rounded text-xs">ESC</kbd> ‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å</div>
              <div>üñ±Ô∏è ‡∫Ñ‡∫•‡∫¥‡∫Å‡ªÉ‡∫™‡ªà‡∫ä‡ªà‡∫≠‡∫á‡∫ï‡∫ª‡∫ß‡ªÄ‡∫•‡∫Å‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡∫û‡∫¥‡∫°‡∫û‡ªå‡ªÇ‡∫î‡∫ç‡∫Å‡∫ª‡∫á</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default TicketConfirmationModal;