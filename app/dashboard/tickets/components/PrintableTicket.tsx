// app/dashboard/tickets/components/PrintableTicket.tsx - Updated with Destination Support
import React, { useEffect, useState } from 'react';
import { LuBus } from "react-icons/lu";
import { FaArrowRight } from "react-icons/fa6";

interface TicketTemplateProps {
  ticketNumber: string;
  price: number;
  soldAt: Date;
  soldBy: string;
  paymentMethod: string;
  
  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Props ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Group Ticket ‡πÅ‡∏•‡∏∞ Destination
  ticketType?: 'individual' | 'group';
  passengerCount?: number;
  pricePerPerson?: number;
  destination?: string;
}

export default function TicketTemplate({
  ticketNumber, price, soldAt, soldBy, paymentMethod,
  ticketType = 'individual', passengerCount = 1, pricePerPerson, destination
}: TicketTemplateProps) {
  const [qrCodeDataURL, setQrCodeDataURL] = useState<string | null>(null);

  const formatDate = (date: Date) => {
    const d = new Date(date);
    return `${d.getDate().toString().padStart(2, '0')}/${(d.getMonth() + 1).toString().padStart(2, '0')}/${d.getFullYear()} ${d.getHours().toString().padStart(2, '0')}:${d.getMinutes().toString().padStart(2, '0')}`;
  };

  const getPaymentText = (method: string) => method === 'cash' ? '‡ªÄ‡∫á‡∫¥‡∫ô‡∫™‡∫ª‡∫î/CASH' : '‡ªÄ‡∫á‡∫¥‡∫ô‡ªÇ‡∫≠‡∫ô/QR';

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
  const getDestinationText = () => {
    return destination && destination.trim() ? destination.trim() : '‡∫ï‡∫ª‡∫ß‡ªÄ‡∫°‡∫∑‡∫≠‡∫á';
  };

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code data ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Driver
  const generateQRCodeData = () => {
    if (ticketType === 'group') {
      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Group Ticket ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
      const qrData = {
        ticketNumber,
        ticketType: 'group',
        passengerCount,
        totalPrice: price,
        pricePerPerson,
        destination: getDestinationText(),
        soldAt: soldAt.toISOString(),
        paymentMethod,
        soldBy,
        forDriverOnly: true,
        validationKey: `GRP-${ticketNumber}-${soldAt.getTime()}`
      };
      return JSON.stringify(qrData);
    } else {
      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Individual Ticket ‡πÉ‡∏ä‡πâ‡πÅ‡∏Ñ‡πà‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ï‡∏±‡πã‡∏ß
      return ticketNumber;
    }
  };

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code
  useEffect(() => {
    const generateQRCode = async () => {
      try {
        const QRCode = await import('qrcode');
        
        const qrData = generateQRCodeData();
        
        const dataURL = await QRCode.toDataURL(qrData, {
          width: 150,
          margin: 3,
          errorCorrectionLevel: 'H',
          color: {
            dark: '#000000',
            light: '#FFFFFF'
          }
        });
        setQrCodeDataURL(dataURL);
      } catch (error) {
        console.error('Error generating QR code:', error);
        setQrCodeDataURL(null);
      }
    };

    generateQRCode();
  }, [ticketNumber, ticketType, passengerCount, destination]);

  return (
    <div 
      id="printable-content"
      className="w-[99mm] h-[200mm] mx-auto bg-white border-2 border-black flex flex-col" 
      style={{ fontFamily: 'Arial, sans-serif', fontSize: '12px', pageBreakInside: 'avoid' }}
    >
      {/* Header */}
      <div className="bg-black text-white p-4 text-center">
        <h1 className="text-2xl text-white font-extrabold uppercase leading-tight">
          ‡∫õ‡∫µ‡ªâ‡∫•‡∫ª‡∫î‡∫ï‡∫π‡ªâ‡ªÇ‡∫î‡∫ç‡∫™‡∫≤‡∫ô‡∫õ‡∫∞‡∫à‡∫≥‡∫ó‡∫≤‡∫á<br/>
          ‡∫•‡∫ª‡∫î‡ªÑ‡∫ü ‡∫•‡∫≤‡∫ß-‡∫à‡∫µ‡∫ô
        </h1>
        <div className="text-sm mt-1">BUS TICKET LAOS-CHINA RAILWAY</div>
      </div>

      {/* Ticket Details - Enhanced with Group Ticket support */}
      <div className="p-4 border-b-2">
        {/* Ticket Number - Make it prominent */}
        <div className="text-center mb-4 p-3 bg-blue-50 rounded border">
          <div className="text-xs text-gray-600 mb-1">‡ªù‡∫≤‡∫ç‡ªÄ‡∫•‡∫Å‡∫õ‡∫µ‡ªâ / Ticket No:</div>
          <div className="text-3xl font-bold text-blue-600 tracking-wider">
            {ticketNumber}
          </div>
          
          {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Group Ticket */}
          {ticketType === 'group' && (
            <div className="mt-2 text-sm">
              <span className="bg-green-100 text-green-800 px-2 py-1 rounded-full font-medium">
                üé´ ‡∫õ‡∫µ‡ªâ‡∫Å‡∫∏‡ªà‡∫°: {passengerCount} ‡∫Ñ‡∫ª‡∫ô
              </span>
            </div>
          )}
        </div>
        
        {/* Other details in grid format */}
        <div className="grid grid-cols-2 gap-2 text-sm">
          <span className="font-medium text-gray-700">‡∫ß‡∫±‡∫ô-‡ªÄ‡∫ß‡∫•‡∫≤/Date-Time:</span>
          <span className="text-gray-900">{formatDate(soldAt)}</span>
          
          {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Group Ticket */}
          {ticketType === 'group' ? (
            <>
              <span className="font-medium text-gray-700">‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ï‡ªç‡ªà‡∫Ñ‡∫ª‡∫ô/Per Person:</span>
              <span className="text-gray-900">‚Ç≠{pricePerPerson?.toLocaleString()}</span>
              
              <span className="font-medium text-gray-700">‡∫•‡∫≤‡∫Ñ‡∫≤‡∫•‡∫ß‡∫°/Total:</span>
              <span className="font-bold text-green-600">‚Ç≠{price.toLocaleString()}</span>
              
              <span className="font-medium text-gray-700">‡∫à‡∫≥‡∫ô‡∫ß‡∫ô‡∫Ñ‡∫ª‡∫ô/Passengers:</span>
              <span className="font-bold text-blue-600">{passengerCount} ‡∫Ñ‡∫ª‡∫ô</span>
            </>
          ) : (
            <>
              <span className="font-medium text-gray-700">‡∫•‡∫≤‡∫Ñ‡∫≤/Price:</span>
              <span className="font-bold text-green-600">‚Ç≠{price.toLocaleString()}</span>
            </>
          )}
          
          <span className="font-medium text-gray-700">‡∫ä‡∫≥‡∫•‡∫∞/Payment:</span>
          <span className="text-gray-900">{getPaymentText(paymentMethod)}</span>
          
          <span className="font-medium text-gray-700">‡∫≠‡∫≠‡∫Å‡ªÇ‡∫î‡∫ç/Sold By:</span>
          <span className="text-gray-900 text-xs">{soldBy}</span>
        </div>
      </div>

      {/* ‚úÖ Route Information - Enhanced with dynamic destination */}
      <div className="p-6 border-b-2 text-center">
        <div className="flex justify-between items-center">
          <div className="flex flex-col items-center">
            <span className="text-sm font-bold text-blue-700">‡∫™‡∫∞‡∫ñ‡∫≤‡∫ô‡∫µ‡∫•‡∫ª‡∫î‡ªÑ‡∫ü<br/>TRAIN STATION</span>
          </div>
          <FaArrowRight className="text-2xl text-blue-600" />
          <div className="flex flex-col items-center mx-4">
            <span className="text-sm font-bold text-blue-700">
              {getDestinationText()}<br/>
              {getDestinationText().toUpperCase()}
            </span>
          </div>
        </div>
        <div className="mt-2 text-xs text-gray-600">
          ‡ªÑ‡∫•‡∫ç‡∫∞‡ªÄ‡∫ß‡∫•‡∫≤‡∫õ‡∫∞‡∫°‡∫≤‡∫ô 45 ‡∫ô‡∫≤‡∫ó‡∫µ / Approx. 45 minutes
        </div>
        
        {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Group Ticket */}
        {ticketType === 'group' && (
          <div className="mt-3 p-2 bg-green-50 rounded border border-green-200">
            <div className="text-xs text-green-700">
              <strong>üé´ ‡∫õ‡∫µ‡ªâ‡∫Å‡∫∏‡ªà‡∫°:</strong> ‡ªÉ‡∫ä‡ªâ‡∫™‡∫≥‡∫•‡∫±‡∫ö {passengerCount} ‡∫Ñ‡∫ª‡∫ô
            </div>
            <div className="text-xs text-green-600 mt-1">
              Group Ticket for {passengerCount} passengers
            </div>
          </div>
        )}
      </div>

      {/* Bus Icon */}
      <div className="p-4 text-center border-b-2">
        <div className="flex justify-center items-center my-4">
          <LuBus className="text-6xl text-gray-300 opacity-60" />
        </div>
      </div>

      {/* QR Code Section - Enhanced for Group Tickets */}
      {qrCodeDataURL && (
        <div className="p-4 text-center border-b-2 bg-gray-50">
          <div className="mb-2">
            <p className="text-sm font-bold text-gray-700">üîç QR CODE FOR DRIVER</p>
          </div>
          <div className="flex justify-center mb-2">
            <img 
              src={qrCodeDataURL} 
              alt="QR Code for Driver Verification" 
              className="w-20 h-20 border border-gray-300 bg-white p-1"
            />
          </div>
          <div className="text-center">
            <p className="text-xs font-bold text-red-600">‡∫™‡∫≥‡∫•‡∫±‡∫ö‡∫û‡∫∞‡∫ô‡∫±‡∫Å‡∫á‡∫≤‡∫ô‡∫Ç‡∫±‡∫ö‡∫•‡∫ª‡∫î‡ªÄ‡∫ó‡∫ª‡ªà‡∫≤‡∫ô‡∫±‡ªâ‡∫ô</p>
            <p className="text-xs text-gray-600">For Driver Verification Only</p>
            <p className="text-xs text-gray-500">
              Ticket: <span className="font-mono font-bold">{ticketNumber}</span>
              {ticketType === 'group' && (
                <span className="ml-2 text-green-600 font-bold">
                  ({passengerCount} passengers)
                </span>
              )}
            </p>
            
            {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡πÉ‡∏ô QR section */}
            <p className="text-xs text-gray-500 mt-1">
              Destination: <span className="font-bold">{getDestinationText()}</span>
            </p>
          </div>
        </div>
      )}

      {/* Footer */}
      <div className="p-4 text-center flex-grow flex flex-col justify-end">
        <div className="space-y-1">
          <p className="text-xs font-bold">*** ‡∫Ç‡ªç‡ªÉ‡∫´‡ªâ‡ªÄ‡∫î‡∫µ‡∫ô‡∫ó‡∫≤‡∫á‡∫õ‡∫≠‡∫î‡ªÑ‡∫û ***</p>
          <p className="text-xs">*** THANK YOU - SAFE JOURNEY ***</p>
          <p className="text-xs">PLEASE KEEP THIS TICKET DURING YOUR JOURNEY</p>
          <p className="text-xs text-gray-600">‡∫Å‡∫≤‡∫•‡∫∏‡∫ô‡∫≤‡∫Æ‡∫±‡∫Å‡∫™‡∫≤‡∫õ‡∫µ‡ªâ‡∫ô‡∫µ‡ªâ‡ªÑ‡∫ß‡ªâ‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡∫Å‡∫ß‡∫î‡∫Å‡∫≤‡∫Ç‡∫∞‡∫ô‡∫∞‡ªÄ‡∫î‡∫µ‡∫ô‡∫ó‡∫≤‡∫á</p>
          <div className="mt-2 pt-2 border-t border-gray-200">
            <p className="text-xs text-gray-500">
              Ticket ID: <span className="font-mono">{ticketNumber}</span>
            </p>
            {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡πÉ‡∏ô footer */}
            <p className="text-xs text-gray-500">
              Route: ‡∫™‡∫∞‡∫ñ‡∫≤‡∫ô‡∫µ‡∫•‡∫ª‡∫î‡ªÑ‡∫ü ‚Üí {getDestinationText()}
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}