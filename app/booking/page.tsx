'use client';

import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import { Calendar, Users, ArrowRight, Clock, MapPin, AlertCircle } from 'lucide-react';
import { getAvailableDates, calculateBookingPrice, formatDateLao, BOOKING_CONSTANTS } from '@/lib/bookingUtils';

interface TravelDateInfo {
  date: string;
  dayName: string;
  isWeekend: boolean;
  isToday: boolean;
  isTomorrow: boolean;
  daysFromNow: number;
}

export default function BookingPage() {
  const router = useRouter();
  const [selectedDate, setSelectedDate] = useState<string>('');
  const [ticketCount, setTicketCount] = useState<number>(1);
  const [availableDates, setAvailableDates] = useState<TravelDateInfo[]>([]);
  const [pricing, setPricing] = useState<any>(null);
  const [loading, setLoading] = useState(false);

  // ‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ
  useEffect(() => {
    const dates = getAvailableDates();
    setAvailableDates(dates);
    
    // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    const tomorrow = dates.find(d => d.isTomorrow);
    if (tomorrow) {
      setSelectedDate(tomorrow.date);
    } else if (dates.length > 0) {
      setSelectedDate(dates[0].date);
    }
  }, []);

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
  useEffect(() => {
    if (selectedDate && ticketCount > 0) {
      const price = calculateBookingPrice(ticketCount, selectedDate);
      setPricing(price);
    }
  }, [selectedDate, ticketCount]);

  const handleSubmit = () => {
    if (!selectedDate || ticketCount < 1) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡∏±‡πã‡∏ß');
      return;
    }

    setLoading(true);
    
    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
    const searchParams = new URLSearchParams({
      travel_date: selectedDate,
      total_tickets: ticketCount.toString(),
      total_price: pricing?.totalPrice.toString() || '0'
    });
    
    router.push(`/booking/details?${searchParams.toString()}`);
  };

  const formatPrice = (amount: number) => {
    return new Intl.NumberFormat('lo-LA').format(amount) + ' ‚Ç≠';
  };

  const selectedDateInfo = availableDates.find(d => d.date === selectedDate);

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-green-50">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-4xl mx-auto px-4 py-6">
          <div className="flex items-center space-x-3">
            <div className="w-12 h-12 bg-blue-600 rounded-full flex items-center justify-center">
              <Calendar className="w-6 h-6 text-white" />
            </div>
            <div>
              <h1 className="text-2xl font-bold text-gray-900">‡∫à‡∫≠‡∫á‡∫õ‡∫µ‡ªâ‡∫•‡∫ª‡∫î‡ªÄ‡∫°</h1>
              <p className="text-gray-600">‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫ß‡∫±‡∫ô‡∫ó‡∫µ‡ªà ‡ªÅ‡∫•‡∫∞ ‡∫à‡∫≥‡∫ô‡∫ß‡∫ô‡∫ú‡∫π‡ªâ‡ªÇ‡∫î‡∫ç‡∫™‡∫≤‡∫ô</p>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-4xl mx-auto px-4 py-8">
        <div className="grid lg:grid-cols-3 gap-8">
          
          {/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á */}
          <div className="lg:col-span-2">
            <div className="bg-white rounded-2xl shadow-lg p-6 space-y-6">
              
              {/* ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á */}
              <div className="bg-blue-50 rounded-xl p-4">
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-3">
                    <MapPin className="w-5 h-5 text-blue-600" />
                    <span className="font-medium text-blue-900">‡∫™‡∫∞‡∫ñ‡∫≤‡∫ô‡∫µ‡∫•‡∫ª‡∫î‡ªÑ‡∫ü</span>
                  </div>
                  <ArrowRight className="w-5 h-5 text-blue-600" />
                  <div className="flex items-center space-x-3">
                    <MapPin className="w-5 h-5 text-blue-600" />
                    <span className="font-medium text-blue-900">‡∫ï‡∫ª‡∫ß‡ªÄ‡∫°‡∫∑‡∫≠‡∫á</span>
                  </div>
                </div>
                <div className="mt-2 text-sm text-blue-700">
                  <Clock className="inline w-4 h-4 mr-1" />
                  ‡ªÄ‡∫ß‡∫•‡∫≤‡ªÄ‡∫î‡∫µ‡∫ô‡∫ó‡∫≤‡∫á: ‡∫õ‡∫∞‡∫°‡∫≤‡∫ô 45 ‡∫ô‡∫≤‡∫ó‡∫µ
                </div>
              </div>

              {/* ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà */}
              <div>
                <label className="block text-lg font-semibold text-gray-900 mb-4">
                  üìÖ ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫ß‡∫±‡∫ô‡∫ó‡∫µ‡ªà‡ªÄ‡∫î‡∫µ‡∫ô‡∫ó‡∫≤‡∫á
                </label>
                
                <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
                  {availableDates.map((dateInfo) => (
                    <button
                      key={dateInfo.date}
                      onClick={() => setSelectedDate(dateInfo.date)}
                      className={`p-4 rounded-xl border-2 text-left transition-all ${
                        selectedDate === dateInfo.date
                          ? 'border-blue-500 bg-blue-50 ring-2 ring-blue-200'
                          : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'
                      }`}
                    >
                      <div className="flex justify-between items-start">
                        <div>
                          <div className="font-semibold text-gray-900">
                            {formatDateLao(dateInfo.date)}
                          </div>
                          <div className={`text-sm ${
                            dateInfo.isToday ? 'text-green-600' :
                            dateInfo.isTomorrow ? 'text-blue-600' :
                            'text-gray-600'
                          }`}>
                            {dateInfo.isToday ? '‡∫°‡∫∑‡ªâ‡∫ô‡∫µ‡ªâ' :
                             dateInfo.isTomorrow ? '‡∫°‡∫∑‡ªâ‡∫≠‡∫∑‡ªà‡∫ô' :
                             `‡∫≠‡∫µ‡∫Å ${dateInfo.daysFromNow} ‡∫ß‡∫±‡∫ô`}
                          </div>
                        </div>
                        <div className={`px-2 py-1 rounded text-xs font-medium ${
                          dateInfo.isWeekend ? 'bg-orange-100 text-orange-800' : 'bg-green-100 text-green-800'
                        }`}>
                          {dateInfo.dayName}
                        </div>
                      </div>
                    </button>
                  ))}
                </div>

                {availableDates.length === 0 && (
                  <div className="text-center py-8 text-gray-500">
                    <AlertCircle className="w-12 h-12 mx-auto mb-3 text-gray-400" />
                    <p>‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫ß‡∫±‡∫ô‡∫ó‡∫µ‡ªà‡∫™‡∫≤‡∫°‡∫≤‡∫î‡∫à‡∫≠‡∫á‡ªÑ‡∫î‡ªâ‡ªÉ‡∫ô‡∫Ç‡∫∞‡∫ô‡∫∞‡∫ô‡∫µ‡ªâ</p>
                  </div>
                )}
              </div>

              {/* ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡∏±‡πã‡∏ß */}
              <div>
                <label className="block text-lg font-semibold text-gray-900 mb-4">
                  üë• ‡∫à‡∫≥‡∫ô‡∫ß‡∫ô‡∫ú‡∫π‡ªâ‡ªÇ‡∫î‡∫ç‡∫™‡∫≤‡∫ô
                </label>
                
                <div className="flex items-center space-x-4">
                  <button
                    onClick={() => setTicketCount(Math.max(1, ticketCount - 1))}
                    disabled={ticketCount <= 1}
                    className="w-12 h-12 rounded-full border-2 border-gray-300 flex items-center justify-center hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    <span className="text-xl font-bold">‚àí</span>
                  </button>
                  
                  <div className="flex-1 max-w-xs">
                    <input
                      type="number"
                      min={BOOKING_CONSTANTS.MIN_TICKETS}
                      max={BOOKING_CONSTANTS.MAX_TICKETS}
                      value={ticketCount}
                      onChange={(e) => setTicketCount(parseInt(e.target.value) || 1)}
                      className="w-full text-center text-2xl font-bold py-3 border-2 border-gray-300 rounded-xl focus:border-blue-500 focus:ring-2 focus:ring-blue-200 outline-none"
                    />
                  </div>
                  
                  <button
                    onClick={() => setTicketCount(Math.min(BOOKING_CONSTANTS.MAX_TICKETS, ticketCount + 1))}
                    disabled={ticketCount >= BOOKING_CONSTANTS.MAX_TICKETS}
                    className="w-12 h-12 rounded-full border-2 border-gray-300 flex items-center justify-center hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    <span className="text-xl font-bold">+</span>
                  </button>
                </div>
                
                <div className="mt-2 text-sm text-gray-600 text-center">
                  ‡∫à‡∫≠‡∫á‡ªÑ‡∫î‡ªâ {BOOKING_CONSTANTS.MIN_TICKETS}-{BOOKING_CONSTANTS.MAX_TICKETS} ‡∫Ñ‡∫ª‡∫ô‡∫ï‡ªç‡ªà‡∫Ñ‡∫±‡ªâ‡∫á
                </div>
              </div>

              {/* ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠ */}
              <button
                onClick={handleSubmit}
                disabled={!selectedDate || ticketCount < 1 || loading}
                className="w-full bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed text-white font-semibold py-4 rounded-xl transition-colors flex items-center justify-center space-x-2"
              >
                {loading ? (
                  <>
                    <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white"></div>
                    <span>‡∫Å‡∫≥‡∫•‡∫±‡∫á‡∫î‡∫≥‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô...</span>
                  </>
                ) : (
                  <>
                    <span>‡∫î‡∫≥‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô‡∫ï‡ªç‡ªà</span>
                    <ArrowRight className="w-5 h-5" />
                  </>
                )}
              </button>
            </div>
          </div>

          {/* ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á */}
          <div className="lg:col-span-1">
            <div className="bg-white rounded-2xl shadow-lg p-6 sticky top-8">
              <h3 className="text-lg font-bold text-gray-900 mb-4">üìã ‡∫™‡∫∞‡∫´‡∫º‡∫∏‡∫ö‡∫Å‡∫≤‡∫ô‡∫à‡∫≠‡∫á</h3>
              
              <div className="space-y-4">
                {/* ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á */}
                <div className="flex justify-between">
                  <span className="text-gray-600">‡∫ß‡∫±‡∫ô‡∫ó‡∫µ‡ªà‡ªÄ‡∫î‡∫µ‡∫ô‡∫ó‡∫≤‡∫á:</span>
                  <span className="font-semibold">
                    {selectedDateInfo ? formatDateLao(selectedDate) : '-'}
                  </span>
                </div>
                
                {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£ */}
                <div className="flex justify-between">
                  <span className="text-gray-600">‡∫à‡∫≥‡∫ô‡∫ß‡∫ô‡∫ú‡∫π‡ªâ‡ªÇ‡∫î‡∫ç‡∫™‡∫≤‡∫ô:</span>
                  <span className="font-semibold">{ticketCount} ‡∫Ñ‡∫ª‡∫ô</span>
                </div>
                
                {/* ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏Ñ‡∏ô */}
                {pricing && (
                  <div className="flex justify-between">
                    <span className="text-gray-600">‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ï‡ªç‡ªà‡∫Ñ‡∫ª‡∫ô:</span>
                    <span className="font-semibold">{formatPrice(pricing.pricePerTicket)}</span>
                  </div>
                )}
                
                <hr className="border-gray-200" />
                
                {/* ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏° */}
                {pricing && (
                  <div className="flex justify-between text-lg">
                    <span className="font-semibold text-gray-900">‡∫•‡∫≤‡∫Ñ‡∫≤‡∫•‡∫ß‡∫°:</span>
                    <span className="font-bold text-blue-600">{formatPrice(pricing.totalPrice)}</span>
                  </div>
                )}
              </div>

              {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
              <div className="mt-6 p-4 bg-yellow-50 rounded-xl">
                <div className="flex items-start space-x-2">
                  <AlertCircle className="w-5 h-5 text-yellow-600 mt-0.5 flex-shrink-0" />
                  <div className="text-sm text-yellow-800">
                    <p className="font-semibold">‡∫Ç‡ªç‡ªâ‡∫Å‡∫≥‡∫ô‡∫ª‡∫î‡∫™‡∫≥‡∫Ñ‡∫±‡∫ô:</p>
                    <ul className="mt-1 space-y-1 text-xs">
                      <li>‚Ä¢ ‡∫ä‡∫≥‡∫•‡∫∞‡ªÄ‡∫á‡∫¥‡∫ô‡∫û‡∫≤‡∫ç‡ªÉ‡∫ô 24 ‡∫ä‡∫ª‡ªà‡∫ß‡ªÇ‡∫°‡∫á</li>
                      <li>‚Ä¢ ‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å‡ªÑ‡∫î‡ªâ‡∫Å‡ªà‡∫≠‡∫ô Admin ‡∫≠‡∫∞‡∫ô‡∫∏‡∫°‡∫±‡∫î</li>
                      <li>‚Ä¢ ‡∫Ñ‡∫∑‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô 100% ‡∫ñ‡ªâ‡∫≤‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å‡∫ó‡∫±‡∫ô‡ªÄ‡∫ß‡∫•‡∫≤</li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}