// app/api/driver/complete/route.ts - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Filter
import { NextResponse } from 'next/server';
import connectDB from '@/lib/mongodb';
import DriverTrip from '@/models/DriverTrip';
import { getServerSession } from 'next-auth';
import { authOptions } from '@/app/api/auth/[...nextauth]/route';

// POST - ‡∏õ‡∏¥‡∏î‡∏£‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏°‡∏∑‡∏≠
export async function POST(request: Request) {
  try {
    const session = await getServerSession(authOptions);
    if (!session || session.user.role !== 'driver') {
      return NextResponse.json(
        { error: 'Unauthorized - Only drivers can access this endpoint' },
        { status: 401 }
      );
    }

    await connectDB();
    
    const driverId = session.user.id;
    const today = new Date().toISOString().split('T')[0];
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const activeTrip = await DriverTrip.findOne({
      driver_id: driverId,
      date: today,
      status: 'in_progress'
    });
    
    if (!activeTrip) {
      return NextResponse.json(
        { error: '‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫Å‡∫≤‡∫ô‡ªÄ‡∫î‡∫µ‡∫ô‡∫ó‡∫≤‡∫á‡∫ó‡∫µ‡ªà‡∫Å‡∫≥‡∫•‡∫±‡∫á‡∫î‡∫≥‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô' },
        { status: 400 }
      );
    }
    
    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ñ‡∏∂‡∏á 80% ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const is80PercentReached = activeTrip.current_passengers >= activeTrip.required_passengers;
    const completedAt = new Date();
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏≠‡∏ö
    activeTrip.status = 'completed';
    activeTrip.completed_at = completedAt;
    activeTrip.is_80_percent_reached = is80PercentReached;
    
    await activeTrip.save();
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
    let message = '';
    let qualificationStatus = '';
    
    if (is80PercentReached) {
      message = `üéâ ‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î‡∫Æ‡∫≠‡∫ö‡∫ó‡∫µ ${activeTrip.trip_number}! ‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£ ${activeTrip.current_passengers}/${activeTrip.required_passengers} ‡∫Ñ‡∫ª‡∫ô`;
      qualificationStatus = '‡∫Æ‡∫≠‡∫ö‡∫ô‡∫µ‡ªâ‡∫ô‡∫±‡∫ö‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡ªÄ‡∫á‡∫∑‡ªà‡∫≠‡∫ô‡ªÑ‡∫Ç‡∫•‡∫≤‡∫ç‡∫Æ‡∫±‡∫ö';
    } else {
      message = `‚ö†Ô∏è ‡∫õ‡∫¥‡∫î‡∫Æ‡∫≠‡∫ö‡∫ó‡∫µ ${activeTrip.trip_number} - ‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£ ${activeTrip.current_passengers}/${activeTrip.required_passengers} ‡∫Ñ‡∫ª‡∫ô`;
      qualificationStatus = '‡∫Æ‡∫≠‡∫ö‡∫ô‡∫µ‡ªâ‡∫ö‡ªç‡ªà‡∫ô‡∫±‡∫ö‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡ªÄ‡∫á‡∫∑‡ªà‡∫≠‡∫ô‡ªÑ‡∫Ç‡∫•‡∫≤‡∫ç‡∫Æ‡∫±‡∫ö (‡∫ï‡ªâ‡∫≠‡∫á‡∫Å‡∫≤‡∫ô 80%)';
    }
    
    // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏ô‡∏±‡∏ö‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡∏ñ‡∏∂‡∏á 80% ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
    const completedTripsToday = await DriverTrip.countDocuments({
      driver_id: driverId,
      date: today,
      status: 'completed',
      is_80_percent_reached: true // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ô‡∏µ‡πâ
    });
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ
    const qualifiesForRevenue = completedTripsToday >= 2;
    
    console.log('Trip completed manually:', {
      tripId: activeTrip._id,
      tripNumber: activeTrip.trip_number,
      passengers: activeTrip.current_passengers,
      required: activeTrip.required_passengers,
      qualifies: is80PercentReached,
      completedTripsToday: completedTripsToday,
      qualifiesForRevenue: qualifiesForRevenue
    });
    
    return NextResponse.json({
      success: true,
      trip_number: activeTrip.trip_number,
      current_passengers: activeTrip.current_passengers,
      required_passengers: activeTrip.required_passengers,
      car_capacity: activeTrip.car_capacity,
      is_80_percent_reached: is80PercentReached,
      trip_completed: true,
      completed_at: completedAt,
      message: message,
      qualification_status: qualificationStatus,
      completed_trips_today: completedTripsToday, // ‚úÖ ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ô‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏∂‡∏á 80%
      qualifies_for_revenue: qualifiesForRevenue,
      revenue_status: qualifiesForRevenue ? 
        '‡∫°‡∫µ‡∫™‡∫¥‡∫î‡∫Æ‡∫±‡∫ö‡∫™‡ªà‡∫ß‡∫ô‡ªÅ‡∫ö‡ªà‡∫á‡∫•‡∫≤‡∫ç‡∫Æ‡∫±‡∫ö 85%' : 
        `‡∫ï‡ªâ‡∫≠‡∫á‡∫Å‡∫≤‡∫ô‡∫≠‡∫µ‡∫Å ${2 - completedTripsToday} ‡∫Æ‡∫≠‡∫ö‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡ªÑ‡∫î‡ªâ‡∫Æ‡∫±‡∫ö‡∫™‡ªà‡∫ß‡∫ô‡ªÅ‡∫ö‡ªà‡∫á‡∫•‡∫≤‡∫ç‡∫Æ‡∫±‡∫ö`
    });

  } catch (error) {
    console.error('Complete Trip Error:', error);
    return NextResponse.json(
      { 
        error: error instanceof Error ? error.message : 'Failed to complete trip',
        details: error instanceof Error ? error.stack : 'Unknown error occurred'
      },
      { status: 500 }
    );
  }
}