// app/api/bookings/[id]/approve/route.ts - Fixed API Route
import { NextResponse } from 'next/server';
import connectDB from '@/lib/mongodb';
import Booking from '@/models/Booking';
import { getServerSession } from 'next-auth';
import { authOptions } from '@/app/api/auth/[...nextauth]/route';

// POST - ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥/‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò booking
export async function POST(
  request: Request,
  context: { params: Promise<{ id: string }> }
) {
  try {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ admin ‡πÅ‡∏•‡∏∞ staff)
    const session = await getServerSession(authOptions);
    if (!session || !['admin', 'staff'].includes(session.user.role)) {
      return NextResponse.json(
        { error: '‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫™‡∫¥‡∫î‡∫ó‡∫¥‡ªà‡∫≠‡∫∞‡∫ô‡∫∏‡∫°‡∫±‡∫î‡∫Å‡∫≤‡∫ô‡∫à‡∫≠‡∫á' },
        { status: 401 }
      );
    }

    await connectDB();
    
    // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: await params ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    const { id } = await context.params;
    
    const body = await request.json();
    console.log('üéØ Booking approval request:', { id, body, user: session.user.email });
    
    const { action, adminNotes } = body;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö action
    if (!action || !['approve', 'reject'].includes(action)) {
      return NextResponse.json(
        { error: '‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫Å‡∫≤‡∫ô‡∫î‡∫≥‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô (‡∫≠‡∫∞‡∫ô‡∫∏‡∫°‡∫±‡∫î ‡∫´‡∫º‡∫∑ ‡∫õ‡∫∞‡∫ï‡∫¥‡ªÄ‡∫™‡∫î)' },
        { status: 400 }
      );
    }
    
    // ‡∏´‡∏≤ booking
    let booking;
    if (id.match(/^[0-9a-fA-F]{24}$/)) {
      booking = await Booking.findById(id);
    } else {
      booking = await Booking.findOne({ bookingNumber: id });
    }
    
    if (!booking) {
      return NextResponse.json(
        { error: '‡∫ö‡ªç‡ªà‡∫û‡∫ª‡∫ö‡∫Å‡∫≤‡∫ô‡∫à‡∫≠‡∫á‡∫ô‡∫µ‡ªâ' },
        { status: 404 }
      );
    }
    
    console.log('üìã Found booking:', {
      id: booking._id,
      bookingNumber: booking.bookingNumber,
      status: booking.status,
      hasPaymentSlip: !!booking.paymentSlip
    });
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    if (booking.status !== 'pending') {
      return NextResponse.json(
        { error: `‡∫Å‡∫≤‡∫ô‡∫à‡∫≠‡∫á‡∫ô‡∫µ‡ªâ‡ªÑ‡∫î‡ªâ‡∫ñ‡∫∑‡∫Å‡∫î‡∫≥‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô‡ªÅ‡∫•‡ªâ‡∫ß (${booking.statusLao})` },
        { status: 400 }
      );
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (booking.isExpired()) {
      booking.status = 'expired';
      await booking.save();
      return NextResponse.json(
        { error: '‡∫Å‡∫≤‡∫ô‡∫à‡∫≠‡∫á‡∫ô‡∫µ‡ªâ‡ªù‡∫ª‡∫î‡∫≠‡∫≤‡∫ç‡∫∏‡ªÅ‡∫•‡ªâ‡∫ß' },
        { status: 400 }
      );
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥)
    if (action === 'approve' && !booking.paymentSlip) {
      return NextResponse.json(
        { error: '‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÉ‡∫´‡ªâ‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡∫≠‡∫±‡∫ö‡ªÇ‡∫´‡∫•‡∫î‡∫™‡∫•‡∫¥‡∫ö‡∫Å‡∫≤‡∫ô‡ªÇ‡∫≠‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫Å‡ªà‡∫≠‡∫ô' },
        { status: 400 }
      );
    }
    
    try {
      if (action === 'approve') {
        console.log('‚úÖ Starting approval process...');
        
        // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ instance method ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
        const approvedBooking = await booking.approve(session.user.id, adminNotes);
        
        console.log('üéâ Booking approved successfully:', {
          bookingNumber: approvedBooking.bookingNumber,
          ticketNumbers: approvedBooking.ticketNumbers,
          approvedBy: session.user.email
        });
        
        return NextResponse.json({
          success: true,
          booking: approvedBooking,
          ticketNumbers: approvedBooking.ticketNumbers,
          message: `‡∫≠‡∫∞‡∫ô‡∫∏‡∫°‡∫±‡∫î‡∫Å‡∫≤‡∫ô‡∫à‡∫≠‡∫á‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î! ‡∫™‡ªâ‡∫≤‡∫á‡∫õ‡∫µ‡ªâ‡ªÄ‡∫•‡∫Å‡∫ó‡∫µ: ${approvedBooking.ticketNumbers.join(', ')}`
        });
        
      } else {
        console.log('‚ùå Starting rejection process...');
        
        // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ instance method ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
        const rejectedBooking = await booking.reject(session.user.id, adminNotes);
        
        console.log('‚úÖ Booking rejected:', {
          bookingNumber: rejectedBooking.bookingNumber,
          rejectedBy: session.user.email,
          reason: adminNotes
        });
        
        return NextResponse.json({
          success: true,
          booking: rejectedBooking,
          message: '‡∫õ‡∫∞‡∫ï‡∫¥‡ªÄ‡∫™‡∫î‡∫Å‡∫≤‡∫ô‡∫à‡∫≠‡∫á‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î'
        });
      }
      
    } catch (approvalError) {
      console.error('‚ùå Booking approval process error:', approvalError);
      
      // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
      if (approvalError instanceof Error) {
        if (approvalError.message.includes('ticket') || approvalError.message.includes('‡∏ï‡∏±‡πã‡∏ß')) {
          return NextResponse.json(
            { error: '‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î‡ªÉ‡∫ô‡∫Å‡∫≤‡∫ô‡∫™‡ªâ‡∫≤‡∫á‡∫õ‡∫µ‡ªâ ‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡∫•‡∫≠‡∫á‡ªÉ‡ªù‡ªà' },
            { status: 500 }
          );
        }
        
        if (approvalError.message.includes('‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏') || approvalError.message.includes('expired')) {
          return NextResponse.json(
            { error: '‡∫Å‡∫≤‡∫ô‡∫à‡∫≠‡∫á‡∫ô‡∫µ‡ªâ‡ªù‡∫ª‡∫î‡∫≠‡∫≤‡∫ç‡∫∏‡ªÅ‡∫•‡ªâ‡∫ß' },
            { status: 400 }
          );
        }
        
        // Error ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
        return NextResponse.json(
          { error: approvalError.message },
          { status: 400 }
        );
      }
      
      // Unknown error
      throw approvalError;
    }
    
  } catch (error) {
    console.error('‚ùå Booking Approval Error:', error);
    return NextResponse.json(
      { 
        error: '‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î‡ªÉ‡∫ô‡∫Å‡∫≤‡∫ô‡∫î‡∫≥‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô',
        details: process.env.NODE_ENV === 'development' 
          ? (error instanceof Error ? error.message : 'Unknown error')
          : undefined
      },
      { status: 500 }
    );
  }
}

// GET - ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥)
export async function GET(
  request: Request,
  context: { params: Promise<{ id: string }> }
) {
  try {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
    const session = await getServerSession(authOptions);
    if (!session || !['admin', 'staff'].includes(session.user.role)) {
      return NextResponse.json(
        { error: '‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫™‡∫¥‡∫î‡∫ó‡∫¥‡ªà‡ªÄ‡∫ö‡∫¥‡ªà‡∫á‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫Å‡∫≤‡∫ô‡∫≠‡∫∞‡∫ô‡∫∏‡∫°‡∫±‡∫î' },
        { status: 401 }
      );
    }

    await connectDB();
    
    // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: await params ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    const { id } = await context.params;
    
    // ‡∏´‡∏≤ booking ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
    let booking;
    if (id.match(/^[0-9a-fA-F]{24}$/)) {
      booking = await Booking.findById(id)
        .populate('approvedBy', 'name email employeeId');
    } else {
      booking = await Booking.findOne({ bookingNumber: id })
        .populate('approvedBy', 'name email employeeId');
    }
    
    if (!booking) {
      return NextResponse.json(
        { error: '‡∫ö‡ªç‡ªà‡∫û‡∫ª‡∫ö‡∫Å‡∫≤‡∫ô‡∫à‡∫≠‡∫á‡∫ô‡∫µ‡ªâ' },
        { status: 404 }
      );
    }
    
    // ‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
    const approvalInfo = {
      bookingNumber: booking.bookingNumber,
      status: booking.status,
      statusLao: booking.statusLao,
      approvedBy: booking.approvedBy,
      approvedAt: booking.approvedAt,
      adminNotes: booking.adminNotes,
      ticketNumbers: booking.ticketNumbers,
      canApprove: booking.status === 'pending' && !booking.isExpired(),
      hasPaymentSlip: !!booking.paymentSlip
    };
    
    return NextResponse.json(approvalInfo);
    
  } catch (error) {
    console.error('‚ùå Get Approval Info Error:', error);
    return NextResponse.json(
      { error: '‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î‡ªÉ‡∫ô‡∫Å‡∫≤‡∫ô‡∫î‡∫∂‡∫á‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫Å‡∫≤‡∫ô‡∫≠‡∫∞‡∫ô‡∫∏‡∫°‡∫±‡∫î' },
      { status: 500 }
    );
  }
}